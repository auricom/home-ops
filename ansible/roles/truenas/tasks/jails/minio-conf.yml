---
- name: jail-minio | get jail ip
  ansible.builtin.shell:
    cmd: iocage exec minio_v2 ifconfig epair0b | grep 'inet' | awk -F ' ' '{ print $2 }'
  changed_when: false
  register: minio_jail_ip
  become: true

- name: jail-minio_v2 | copy letsencrypt certificate
  ansible.builtin.copy:
    src: /mnt/{{ pool_name }}/home/homelab/letsencrypt/xpander.ovh/{{ item.src }}
    remote_src: true
    dest: /mnt/{{ iocage_pool_name }}/iocage/jails/minio_v2/root/home/minio/certs/{{ item.dest }}
    owner: 1002
    group: 1002
    mode: 0600
  loop:
    - { src: "fullchain.pem", dest: "public.crt" }
    - { src: "key.pem", dest: "private.key" }
  register: certificates
  become: true

- block:
  - name: jail-minio | install minio
    ansible.builtin.pkgng:
      name:
        - minio
        - curl
      state: present
    register: installation

  - name: jail-minio | create minio configuration in /etc/rc.conf
    ansible.builtin.blockinfile:
      path: /etc/rc.conf
      state: present
      block: |
        # MINIO
        minio_enable="YES"
        minio_address=":9000"
        minio_console_address=":9001"
        minio_disks="/mnt/data"
        minio_certs="/home/minio/certs"
        minio_env="MINIO_ACCESS_KEY={{ minio_access_key }} MINIO_SECRET_KEY={{ minio_secret_key }}"
    no_log: false
    register: configuration

  - name: jail-minio | restart minio service
    ansible.builtin.service:
      name: minio
      state: restarted
      enabled: true
    when: configuration.changed == true or installation.changed == true or certificates.changed == true

  - name: jail-minio | wait for 5 seconds
    ansible.builtin.pause:
      seconds: 5

  - name: jail-minio | check minio service
    ansible.builtin.command: curl -s localhost:9000/minio/health/live
    register: curl_result
    ignore_errors: true
    changed_when: false

  - name: jail-minio | fail if curl command failed
    ansible.builtin.fail:
      msg: 'Curl command failed'
    when: curl_result.rc != 0

  delegate_to: "{{ minio_jail_ip.stdout }}"
  remote_user: root
