---
- name: jail-{{ outside_item.item }} | get jail ip
  ansible.builtin.shell:
    cmd: iocage exec {{ outside_item.item }} ifconfig epair0b | grep 'inet' | awk -F ' ' '{ print $2 }'
  changed_when: false
  register: postgresql_jail_ip
  become: true

- name: jail-{{ outside_item.item }} | copy letsencrypt certificate
  ansible.builtin.copy:
    src: /mnt/{{ pool_name }}/home/homelab/letsencrypt/xpander.ovh/{{ item.src }}
    remote_src: true
    dest: /mnt/{{ postgresql_pool_name }}/postgresql/data{{ hostvars[outside_item.item]['postgresql_version'] }}/{{ item.dest }}
    owner: 770
    group: 770
    mode: 0600
  loop:
    - { src: "fullchain.pem", dest: "server.crt" }
    - { src: "key.pem", dest: "server.key" }
  register: certificates
  become: true
  tags:
    - certificates

- block:
  - name: jail-{{ outside_item.item }} | configure pg_hba
    ansible.builtin.template:
      src: postgresql/pg_hba.conf
      dest: /var/db/postgres/data{{ hostvars[outside_item.item]['postgresql_version'] }}/pg_hba.conf
      owner: postgres
      group: postgres
    register: pg_hba

  - name: jail-{{ outside_item.item }} | postgresql configuration
    community.postgresql.postgresql_set:
      name: "{{ item.name }}"
      value: "{{ item.value }}"
    loop:
      # listen to all addresses
      - { name: 'listen_addresses', value: '*' }
      # disable full page writes because of ZFS
      - { name: 'full_page_writes', value: 'off' }
      # SSL configuration
      - { name: 'ssl', value: 'on' }
      - { name: 'ssl_cert_file', value: 'server.crt' }
      - { name: 'ssl_key_file', value: 'server.key' }
      - { name: 'ssl_prefer_server_ciphers', value: 'on' }
    loop_control:
      loop_var: item
    become: true
    vars:
      ansible_become_user: postgres
    register: pg_conf

  - name: restart postgresql
    ansible.builtin.service:
      name: postgresql
      state: reloaded
    when: certificates.changed or pg_hba.changed or pg_conf.changed
    tags:
      - certificates

  delegate_to: "{{ postgresql_jail_ip.stdout }}"
  remote_user: root
