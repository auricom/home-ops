---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com./charts/
      chart: lidarr
      version: 10.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    controllerType: deployment
    image:
      repository: ghcr.io/k8s-at-home/lidarr
      tag: v1.0.0.2248
      pullPolicy: IfNotPresent
    env:
      TZ: "Europe/Paris"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-forward-auth@kubernetescrd, networking-buffering-small@kubernetescrd
          forecastle.stakater.com/expose: "true"
          forecastle.stakater.com/appName: "Lidarr"
          forecastle.stakater.com/icon: "https://raw.githubusercontent.com/lidarr/Lidarr/14c3d31c2bf64893e9e7c137a04bfc096e6d36fe/frontend/src/Content/Images/Icons/android-chrome-192x192.png"
          forecastle.stakater.com/network-restricted: "true"
        hosts:
          - host: lidarr.${SECRET_CLUSTER_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
      api:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: "lidarr.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /api
                pathType: Prefix
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config
      nfs-music-media:
        enabled: true
        existingClaim: nfs-music-media
        mountPath: "/mnt/storage/music"
      nfs-video-media:
        enabled: true
        existingClaim: nfs-video-media
        mountPath: "/mnt/storage/video"
      qbittorrent-cache:
        enabled: true
        existingClaim: qbittorrent-cache
        mountPath: "/downloads"
    resources:
      requests:
        memory: 500Mi
        cpu: 500m
      limits:
        memory: 1500Mi
    service:
      main:
        annotations:
          prometheus.io/probe: "true"
          prometheus.io/protocol: http
    prometheus:
      podMonitor:
        enabled: true
        interval: 10m
        scrapeTimeout: 2m
    additionalContainers:
      - name: exportarr
        image: ghcr.io/onedr0p/exportarr:v0.6.1
        imagePullPolicy: IfNotPresent
        args: ["exportarr", "lidarr"]
        env:
          - name: PORT
            value: "32123"
          - name: URL
            value: "http://localhost"
          - name: CONFIG
            value: "/config/config.xml"
          - name: ENABLE_UNKNOWN_QUEUE_ITEMS
            value: "true"
          - name: ENABLE_ADDITIONAL_METRICS
            value: "true"
        ports:
          - name: exportarr
            containerPort: 32123
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true
