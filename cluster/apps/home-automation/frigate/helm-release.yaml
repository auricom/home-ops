---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home-automation
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: frigate
      version: 6.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: blakeblackshear/frigate
      tag: 0.9.0-f110a26-amd64

    securityContext:
      privileged: true

    persistence:
      data:
        enabled: true
        existingClaim: frigate-config
        mountPath: /data
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /dev/shm

    config: |
      mqtt:
        host: emqx
        topic_prefix: frigate
        user: ${SECRET_MQTT_USERNAME}
        password: ${SECRET_MQTT_PASSWORD}

      database:
        path: /data/frigate.db

      detectors:
        coral:
          type: edgetpu
          device: usb

      objects:
        track:
        - person
        - dog
        - cat
        filters:
          person:
            min_area: 2500
            max_area: 100000
            threshold: 0.7
          dog:
            min_area: 1000
            max_area: 10000
            threshold: 0.7
          cat:
            min_area: 1000
            max_area: 10000
            threshold: 0.7

      ffmpeg:
        hwaccel_args:
        - -hwaccel
        - vaapi
        - -hwaccel_device
        - /dev/dri/renderD128
        - -hwaccel_output_format
        - yuv420p

    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate-config"

    service:
      main:
        annotations:
          prometheus.io/probe: "true"
          prometheus.io/protocol: http

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "http://authelia.networking.svc.cluster.local/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://login.${SECRET_CLUSTER_DOMAIN}"
          # traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.middlewares: networking-forward-auth@kubernetescrd
        hosts:
          - host: "frigate.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "frigate.${SECRET_CLUSTER_DOMAIN}"
            secretName: "${SECRET_CLUSTER_CERTIFICATE_DEFAULT}"

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-coral-tpu
                  operator: In
                  values:
                    - "true"
                - key: feature.node.kubernetes.io/custom-intel-gpu
                  operator: In
                  values:
                    - "true"

    resources:
      requests:
        gpu.intel.com/i915: 1
        memory: 100Mi
        cpu: 500m
      limits:
        gpu.intel.com/i915: 1
        memory: 2000Mi
