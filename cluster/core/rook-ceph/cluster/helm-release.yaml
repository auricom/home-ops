---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.10.4
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: "nginx"
        host:
          name: "rook.${SECRET_CLUSTER_DOMAIN}"
          path: "/"
        tls:
          - hosts:
              - "rook.${SECRET_CLUSTER_DOMAIN}"
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
    cephClusterSpec:
      mgr:
        count: 1
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "k3s-worker1"
            devices:
              - name: "nvme0n1"
          - name: "k3s-worker2"
            devices:
              - name: "nvme0n1"
          - name: "k3s-worker3"
            devices:
              - name: "nvme0n1"
      resources:
        mgr:
          requests:
            cpu: "125m"
            memory: "512Mi"
          limits:
            memory: "1Gi"
        mon:
          requests:
            cpu: "50m"
            memory: "512Mi"
          limits:
            memory: "1Gi"
        osd:
          requests:
            cpu: "300m"
            memory: "512Mi"
          limits:
            memory: "6Gi"
        mgr-sidecar:
          requests:
            cpu: "50m"
            memory: "100Mi"
          limits:
            memory: "200Mi"
        crashcollector:
          requests:
            cpu: "15m"
            memory: "64Mi"
          limits:
            memory: "128Mi"
        logcollector:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            memory: "1Gi"
        cleanup:
          requests:
            cpu: "250m"
            memory: "100Mi"
          limits:
            memory: "1Gi"
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-rbdplugin-snapclass
      annotations:
        k10.kasten.io/is-snapshot-class: "true"
    cephBlockPools:
      - name: replicapool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: rook-ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems:
      []
      # - name: rook-ceph-filesystem
      #   spec:
      #     metadataPool:
      #       replicated:
      #         size: 3
      #     dataPools:
      #       - failureDomain: host
      #         replicated:
      #           size: 3
      #         name: data0
      #     metadataServer:
      #       activeCount: 1
      #       activeStandby: true
      #       resources:
      #         requests:
      #           cpu: 1000m
      #           memory: 4Gi
      #         limits:
      #           memory: 4Gi
      #   storageClass:
      #     enabled: true
      #     isDefault: false
      #     name: ceph-filesystem
      #     pool: data0
      #     reclaimPolicy: Delete
      #     allowVolumeExpansion: true
      #     parameters:
      #       csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
      #       csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
      #       csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
      #       csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
      #       csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
      #       csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
      #       csi.storage.k8s.io/fstype: ext4
    cephObjectStores:
      []
      # - name: rook-ceph-objectstore
      #   spec:
      #     metadataPool:
      #       failureDomain: host
      #       replicated:
      #         size: 3
      #     dataPool:
      #       failureDomain: host
      #       erasureCoded:
      #         dataChunks: 2
      #         codingChunks: 1
      #     preservePoolsOnDelete: true
      #     gateway:
      #       port: 80
      #       resources:
      #         requests:
      #           cpu: 1000m
      #           memory: 1Gi
      #         limits:
      #           memory: 2Gi
      #       instances: 1
      #     healthCheck:
      #       bucket:
      #         interval: 60s
      #   storageClass:
      #     enabled: true
      #     name: rook-ceph-bucket
      #     reclaimPolicy: Delete
      #     parameters:
      #       region: us-east-1
