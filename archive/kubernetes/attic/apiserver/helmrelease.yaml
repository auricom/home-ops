---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app attic-apiserver
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/auricom/postgres-init:15.4
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: &secret attic-secret
    controller:
      replicas: 2
      strategy: RollingUpdate
      annotations:
        configmap.reloader.stakater.com/reload: &configMap attic-configmap
        secret.reloader.stakater.com/reload: *secret
    image:
      repository: ghcr.io/zhaofengli/attic
      tag: latest@sha256:06d9ca943cfe38ef954cbe2dd453dac0788f55661f84c31254a3a8044aa3100f
    args: ["-f", "/config/server.toml", "--mode", "api-server" ]
    envFrom: *envFrom
    service:
      main:
        ports:
          http:
            port: &port 8080
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: services.${SECRET_DOMAIN}.
          hajimari.io/enable: "false"
        hosts:
          - host: &host nix-cache.${SECRET_CLUSTER_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: configMap
        name: *configMap
        subPath: server.toml
        mountPath: /config/server.toml
        readOnly: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
    resources:
      requests:
        cpu: 50m
        memory: 200Mi
      limits:
        memory: 1Gi
