---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: drone
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: drone
      version: 0.6.4
      sourceRef:
        kind: HelmRepository
        name: drone
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: drone/drone
      tag: 2.16.0
    persistentVolume:
      enabled: false
    env:
      DRONE_DATABASE_DRIVER: postgres
      DRONE_GIT_ALWAYS_AUTH: true
      DRONE_GITEA_SERVER: https://gitea.${SECRET_CLUSTER_DOMAIN}
      DRONE_SERVER_HOST: &host drone.${SECRET_CLUSTER_DOMAIN}
      DRONE_SERVER_PROTO: https
      DRONE_SERVER_PROXY_HOST: drone.default.svc:8080
      DRONE_SERVER_PROXY_PROTO: http
      DRONE_USER_CREATE: username:context,admin:true
    ingress:
      enabled: true
      className: nginx
      annotations:
        hajimari.io/icon: mdi:reload
      hosts:
        - host: *host
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host
  valuesFrom:
    - targetPath: env.DRONE_DATABASE_DATASOURCE
      kind: Secret
      name: drone
      valuesKey: DRONE_DATABASE_DATASOURCE
    - targetPath: env.DRONE_GITEA_CLIENT_ID
      kind: Secret
      name: drone
      valuesKey: DRONE_GITEA_CLIENT_ID
    - targetPath: env.DRONE_GITEA_CLIENT_SECRET
      kind: Secret
      name: drone
      valuesKey: DRONE_GITEA_CLIENT_SECRET
    - targetPath: env.DRONE_RPC_SECRET
      kind: Secret
      name: drone
      valuesKey: DRONE_RPC_SECRET
  postRenderers:
    - kustomize:
        patchesStrategicMerge:
          - kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: drone
            spec:
              template:
                spec:
                  initContainers:
                    - name: init-db
                      image: ghcr.io/onedr0p/postgres-initdb:14.7
                      env:
                        - name: POSTGRES_HOST
                          value: ${POSTGRES_HOST}
                        - name: POSTGRES_DB
                          value: drone
                        - name: POSTGRES_SUPER_PASS
                          valueFrom:
                            secretKeyRef:
                              name: postgres-superuser
                              key: password
                      envFrom:
                        - secretRef:
                            name: drone
