---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app pyload
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        type:  statefulset
        containers:
          main:
            image:
              repository: ghcr.io/auricom/pyload-ng
              tag: 0.5.0-b3.dev29@sha256:fd1343113033b3f8dcbbdad70a2bdbac20c40852a37f6925b9506a1f8d09e1c2
            env:
              TZ: "${TIMEZONE}"
            resources:
              requests:
                cpu: 15m
                memory: 105Mi
              limits:
                memory: 1Gi
            probes:
              liveness: &probe
                custom: true
                enabled: true
                spec:
                  failureThreshold: 5
                  httpGet:
                    path: /login
                    port: 8000
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 10
              readiness: *probe
              startup: *probe
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 1Gi
              storageClass: rook-ceph-block
              globalMounts:
                - path: /config
    service:
      main:
        ports:
          http:
            port: 8000
    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          auth.home.arpa/enabled: "true"
          hajimari.io/icon: mdi:download
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      downloads:
        type: nfs
        server: "${LOCAL_LAN_TRUENAS}"
        path: /mnt/storage/downloads
        globalMounts:
          - path: /mnt/storage/downloads
