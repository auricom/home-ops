---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app readeck
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      readeck:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: readeck-secret
        containers:
          app:
            image:
              repository: codeberg.org/readeck/readeck
              tag: 0.15.1@sha256:dba4458938397af9dca2e414ef89417c8b7d8c314fdf49f9f95bfb36e82c9f63
            env:
              TZ: "${TIMEZONE}"
              READECK_LOG_LEVEL: info
              READECK_DEV_MODE: "false"
              READECK_SERVER_HOST: 0.0.0.0
              READECK_SERVER_PORT: &port "8080"
              READECK_SERVER_PREFIX: /
              READECK_USE_X_FORWARDED: "true"
              READECK_ALLOWED_HOSTS: &host "{{ .Release.Name }}.${SECRET_EXTERNAL_DOMAIN}"
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 2000Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          # nginx.ingress.kubernetes.io/auth-method: GET
          # nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local.:8888/api/verify
          # nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_EXTERNAL_DOMAIN}?rm=$request_method
          # nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          hajimari.io/icon: mdi:fa-book
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Readeck
          gethomepage.dev/description: Saves the precious readable content of web pages to keep forever.
          gethomepage.dev/group: Applications
          gethomepage.dev/icon: readeck.png
          gethomepage.dev/pod-selector: >-
            app in (
              readeck
            )
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /config
