sharry.restserver {
  base-url = "https://sharry.${SECRET_EXTERNAL_DOMAIN}"
  bind {
    address = "0.0.0.0"
    port =9090
  }
  # Configures logging
  logging {
    format = "Fancy"
    minimum-level = "Info"
  }
  backend {
    auth {
      fixed.enabled = false
    }
    jdbc {
      url = "jdbc:postgresql://postgres16-rw.database.svc.cluster.local:5432/sharry"
      # user = "${SHARRY_BACKEND_JDBC_USER}"
      # password = "${SHARRY_BACKEND_JDBC_PASSWORD}"
    }

    # How files are stored.
    files {
      # The id of an enabled store from the `stores` array that should
      # be used.
      default-store = "filesystem"
      # A list of possible file stores. Each entry must have a unique
      # id. The `type` is one of: default-database, filesystem, s3.
      #
      # All stores with enabled=false are
      # removed from the list. The `default-store` must be enabled.
      stores = {
        filesystem =
          { enabled = true
            type = "file-system"
            directory = "/var/mnt/vol1/apps/sharry"
            clean-empty-dirs = true
          }
        minio =
          { enabled = false
            type = "s3"
            endpoint = "https://s3.${SECRET_INTERNAL_DOMAIN}"
            # access-key = "${SECRET_SHARRY_BACKEND_FILES_STORES_MINIO_ACCESS_KEY}"
            # secret-key = "${SECRET_SHARRY_BACKEND_FILES_STORES_MINIO_SECRET_KEY}"
            bucket = "sharry"
          }
        }
      }
    webapp {
      # This is shown in the top right corner of the web application
      app-name = "Sharry"
      # The icon next to the app-name. Needs to be an URL to a image.
      app-icon = ""
      # The login and register page displays a logo image, by default
      # the Sharry logo. This can be changed here. It needs to be an URL
      # to an image.
      app-logo = ""
      # This is markdown that is inserted as the footer on each page in
      # the ui. If left empty, a link to the project is rendered.
      app-footer = ""
      # Whether to display the footer on each page in the ui. Set it to
      # false to hide it.
      app-footer-visible = true
      # Chunk size used for one request. The server will re-chunk the
      # stream into smaller chunks. But the client can transfer more in
      # one requests, resulting in faster uploads.
      #
      # You might need to adjust this value depending on your setup. A
      # higher value usually means faster uploads.
      chunk-size = "100M"
      # Number of milliseconds the client should wait before doing a new
      # upload attempt after something failed. The length of the array
      # denotes the number of retries.
      retry-delays = [0, 3000, 6000, 12000, 24000, 48000]
      # The login page can display a welcome message that is readable by
      # everyone. The text is processed as markdown.
      welcome-message = ""
    }
    share {
      # When storing binary data use chunks of this size.
      chunk-size = "512K"
      # Maximum size of a share.
      max-size = "5G"
      # Maximum validity for uploads
      max-validity =31 days
    }
    signup {
      mode = "invite"
      invite-time = "14 days"
      invite-password = "generate-invite"
    }
    mail {
      enabled = true
      smtp {
        host = "smtp-relay.default.svc.cluster.local."
        port = 2525
        user = ""
        password = ""

        ssl-type = "none"

        default-from = "Sharry <sharry@${SECRET_EXTERNAL_DOMAIN}>"
      }
    }
  }
}
