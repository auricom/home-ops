---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        type: statefulset
        annotations:
          configmap.reloader.stakater.com/reload: radarr-pushover
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/auricom/postgres-init
              tag: 15.5@sha256:9b1b80d8101d3f1c73ef13b90dff2ab3bc855bd79ebcd334cba57db391ce6db0
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.2.5.8361@sha256:c6b3d06ce98faacdd2e91e70763d0c96ab1421aa4858f45957a14d91ff9490a0
            env:
              TZ: "${TIMEZONE}"
              PUSHOVER_APP_URL: &host "{{ .Release.Name }}.${SECRET_CLUSTER_DOMAIN}"
              PUSHOVER_DEBUG: "false"
              PUSHOVER_PRIORITY: "0"
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 8080
              RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_CLUSTER_DOMAIN}"
              RADARR__LOG_LEVEL: info
              RADARR__THEME: dark
            envFrom: *envFrom
            resources:
              requests:
                cpu: 500m
                memory: 500Mi
              limits:
                memory: 2000Mi
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local.:8888/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_CLUSTER_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          hajimari.io/icon: mdi:filmstrip
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      downloads:
        enabled: true
        type: nfs
        server: "${LOCAL_LAN_TRUENAS}"
        path: /mnt/storage/downloads
        globalMounts:
          - path: /mnt/storage/downloads
      video:
        enabled: true
        type: nfs
        server: "${LOCAL_LAN_TRUENAS}"
        path: /mnt/storage/video
        globalMounts:
          - path: /mnt/storage/video
      scripts:
        enabled: true
        type: configMap
        name: radarr-pushover
        defaultMode: 0775
        globalMounts:
          - path: /scripts/pushover-notify.sh
            subPath: pushover-notify.sh
            readOnly: true
