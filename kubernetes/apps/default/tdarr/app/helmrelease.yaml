---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tdarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      tdarr:
        containers:
          app:
            image:
              repository: haveagitgat/tdarr
              tag: 2.46.01@sha256:1376fc2c1bcbd8c3eabc210d1531cd4287334facfbf3a78e4b10387be0a4d223
            env:
              TZ: ${TIMEZONE}
              PUID: 1000
              PGID: 1000
              serverIP: 0.0.0.0
              serverPort: &serverPort 8266
              webUIPort: &port 8265
              internalNode: "false"
              inContainer: "true"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            #  capabilities:
            #    drop:
            #      - ALL
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          server:
            port: *serverPort
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_EXTERNAL_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      config:
        enabled: true
        existingClaim: *app
        advancedMounts:
          tdarr:
            app:
              - path: /app/configs
                subPath: config
              - path: /app/server
                subPath: server
      movies:
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/video/movies
        globalMounts:
          - path: /mnt/storage/video/movies
      tv:
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/video/tv
        globalMounts:
          - path: /mnt/storage/video/tv
      shared:
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/video/.tdarr
        globalMounts:
          - path: /mnt/cache
