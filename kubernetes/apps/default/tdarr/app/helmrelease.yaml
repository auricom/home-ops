---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tdarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              # Intel N100
              - key: feature.node.kubernetes.io/cpu-model.id
                operator: In
                values:
                - "190"
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              # Intel N100
              - key: feature.node.kubernetes.io/cpu-model.id
                operator: In
                values:
                - "190"
              - key: intel.feature.node.kubernetes.io/gpu
                operator: In
                values:
                - "true"
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      tdarr:
        containers:
          app:
            image:
              repository: haveagitgat/tdarr
              tag: 2.23.01@sha256:3e08ace2525b7f0bc7f99246168ad01ba9f1ef58a6ddfdd7d229691d127f93fd
          node:
            image:
              repository: haveagitgat/tdarr_node
              tag: 2.23.01@sha256:c4c2ccfcb429d5db56db3a47ff16f27bdbdb1c7c9b623a57e6f0c1874d8f7fa2
            env:
            - name: nodeID
              value: node
            - name: serverIP
              value: localhost
            - name: serverPort
              value: 8266
            resources:
              requests:
                cpu: 100m
              limits:
                cpu: 2
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8265
      server:
        controller: *app
        type: LoadBalancer
        loadBalancerIP: 192.168.169.117
        externalTrafficPolicy: Local
        ports:
          server:
            enabled: true
            protocol: TCP
            port: 8266
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local.:8888/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_EXTERNAL_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          hajimari.io/icon: material-symbols:switch-video-outline
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_EXTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
        advancedMounts:
          tdarr:
            app:
              - path: /app/configs
                subPath: config
              - path: /app/server
                subPath: server
            node:
              - path: /app/configs
                subPath: config
              - path: /app/server
                subPath: server
      movies:
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/video/movies
        globalMounts:
          - path: /mnt/movies
      tv:
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/video/tv
        globalMounts:
          - path: /mnt/tv
      shared:
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/video/.tdarr
        globalMounts:
          - path: /mnt/shared
