---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      paperless:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: authelia-secret
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.13.4@sha256:275b8ef0b0d9026cff6f04fbf79b28077fb08fe7f33c52bd73531cfc692b361a
            env:
              COMPOSE_PROJECT_NAME: paperless
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTH_REQUEST_EMAIL
              PAPERLESS_OCR_LANGUAGES: fra
              PAPERLESS_OCR_LANGUAGE: fra
              PAPERLESS_PORT: 8000
              PAPERLESS_DBNAME: paperless
              PAPERLESS_REDIS: redis://dragonfly.database.svc.cluster.local.:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIME_ZONE: Europe/Paris
              PAPERLESS_URL: https://paperless.${SECRET_EXTERNAL_DOMAIN}
            envFrom: *envFrom
            resources:
              requests:
                cpu: 25m
                memory: 3Gi
              limits:
                memory: 7Gi
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8000
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/icon: mdi:barcode-scan
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Paperless
          gethomepage.dev/description: Document management system that transform physical documents into a searchable online archive.
          gethomepage.dev/group: Applications
          gethomepage.dev/icon: paperless.png
          gethomepage.dev/pod-selector: >-
            app in (
              paperless
            )
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_EXTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      data:
        enabled: true
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/shared-documents/paperless/data
        globalMounts:
          - path: /usr/src/paperless/data
      media:
        enabled: true
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/shared-documents/paperless/media
        globalMounts:
          - path: /usr/src/paperless/media
      consume:
        enabled: true
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/shared-documents/paperless/watch
        globalMounts:
          - path: /usr/src/paperless/consume
      export:
        enabled: true
        type: nfs
        server: 192.168.9.10
        path: /var/mnt/vol1/shared-documents/paperless/export
        globalMounts:
          - path: /usr/src/paperless/export
