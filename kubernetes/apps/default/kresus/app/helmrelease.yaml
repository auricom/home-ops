---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app kresus
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: kresus-secret
        containers:
          main:
            image:
              repository: ghcr.io/auricom/kresus
              tag: 0.20.1@sha256:b4772325fdc18c7010a36b3a738437ead063a91d3474af625f6d321a1f872954
              imagePullPolicy: IfNotPresent
            env:
              HOST: 0.0.0.0
              PORT: 9876
              LC_ALL: C.UTF-8
              LANG: C.UTF-8
              KRESUS_DB_TYPE: postgres
              KRESUS_DIR: /config
              KRESUS_EMAIL_HOST: mailrise.default.svc.cluster.local
              KRESUS_EMAIL_PORT: 8025
              KRESUS_EMAIL_TRANSPORT: smtp
              KRESUS_EMAIL_FROM: kresus@mailrise.home.arpa
              KRESUS_PYTHON_EXEC: python3
              KRESUS_WOOB_DIR: /woob
              NODE_ENV: production
            envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 1Gi
              storageClass: rook-ceph-block
              globalMounts:
                - path: /config
    service:
      main:
        ports:
          http:
            port: 9876
    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local.:8888/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_CLUSTER_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          hajimari.io/icon: mdi:cash
        hosts:
          - host: &host "cash.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      woob:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /mnt/woob
