---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app lychee
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: lychee-redis
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        type: statefulset
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/auricom/postgres-init
              tag: 15.5@sha256:9b1b80d8101d3f1c73ef13b90dff2ab3bc855bd79ebcd334cba57db391ce6db0
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: lychee-secret
        containers:
          main:
            image:
              repository: lycheeorg/lychee-laravel
              tag: v4.13.0
            env:
              TIMEZONE: ${TIMEZONE}
              APP_NAME: Lychee
              DB_CONNECTION: pgsql
              REDIS_HOST: lychee-redis.default.svc.cluster.local.
              REDIS_PORT: 6379
            envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 50Gi
              storageClass: rook-ceph-block
              globalMounts:
                - path: /uploads
    service:
      main:
        ports:
          http:
            port: 80
    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: services.${SECRET_DOMAIN}.
          hajimari.io/icon: mdi:camera
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
        tls:
          - hosts:
              - *host
    persistence:
      photo:
        enabled: true
        type: nfs
        server: "${LOCAL_LAN_TRUENAS}"
        path: /mnt/storage/photo
        readOnly: true
        globalMounts:
          - path: /mnt/storage/photo
