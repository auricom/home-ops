---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app babybuddy
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      babybuddy:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: babybuddy-secret
          migrations:
            image:
              repository: ghcr.io/auricom/babybuddy
              tag: 2.4.0@sha256:d18251b5ccbb89d9fc4a5b965743341f275bb012e8730bb94b3d4c11853bcb4d
              pullPolicy: IfNotPresent
            envFrom: *envFrom
            command:
              - /bin/bash
              - -c
              - |
                #!/bin/bash

                set -o errexit
                set -o nounset

                cd www/public
                python3 ./manage.py migrate --noinput
                python3 ./manage.py createcachetable
        containers:
          app:
            image:
              repository: ghcr.io/auricom/babybuddy
              tag: 2.4.0@sha256:14203c3b2fc7e4e46c6cee50a17f12f0fcd809086638d7eec6f3377624f28a87
            env:
              TZ: ${TIMEZONE}
              EMAIL_HOST: smtp-relay.default.svc.cluster.local.
              EMAIL_PORT: "2525"
              EMAIL_USE_TLS: "false"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/icon: mdi:baby-face-outline
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /config
