---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app tandoor
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/auricom/recipes
      tag: "1.4.8@sha256:52d1193cd7f27672b7f6334a36a78c2d2c1d86981f992896edb60b6a13e48a2d"
    envFrom:
      - secretRef:
          name: *app
    command:
      - /app/venv/bin/gunicorn
      - -b
      - :8888
      - --access-logfile
      - "-"
      - --error-logfile
      - "-"
      - --log-level
      - INFO
      - recipes.wsgi
    service:
      main:
        ports:
          http:
            port: &port 8080
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          hajimari.io/icon: mdi:chef-hat
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &host2 "recipes.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
              - *host2
    persistence:
      files:
        enabled: true
        existingClaim: tandoor-files
        mountPath: /app/mediafiles
      nginx-config:
        enabled: "true"
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx-config
        type: "custom"
        volumeSpec:
          configMap:
            name: *app
      static:
        enabled: true
        mountPath: /app/staticfiles
        type: emptyDir
      cache:
        enabled: true
        mountPath: /mnt/cache
        type: emptyDir
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    podAnnotations:
      configMap.reloader.stakater.com/reload: *app
      secret.reloader.stakater.com/reload: *app
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        memory: 512Mi
    initContainers:
      init-migrate:
        image: ghcr.io/auricom/recipes:1.4.8@sha256:52d1193cd7f27672b7f6334a36a78c2d2c1d86981f992896edb60b6a13e48a2d
        envFrom:
          - secretRef:
              name: *app
        command:
        - sh
        - -c
        - |
          set -e
          source /app/venv/bin/activate
          echo "Updating database"
          python3 /app/manage.py migrate
          python3 /app/manage.py collectstatic_js_reverse
          python3 /app/manage.py collectstatic --noinput
        volumeMounts:

          - name: static
            mountPath: /app/static
    additionalContainers:
      nginx:
        name: nginx
        image: nginxinc/nginx-unprivileged:1.23.4-alpine
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: *port
            protocol: TCP
        volumeMounts:
          - name: nginx-config
            readOnly: true
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx-config
          - name: files
            mountPath: /media
          - name: static
            mountPath: /static
          - name: cache
            mountPath: /var/cache/nginx
